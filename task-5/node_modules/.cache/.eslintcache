[{"/home/semp/programs/react/react-projects/form/src/index.js":"1","/home/semp/programs/react/react-projects/form/src/valid.js":"2","/home/semp/programs/react/react-projects/form/src/App.js":"3","/home/semp/programs/react/react-projects/form/src/StatusPage.js":"4","/home/semp/programs/react/react-projects/form/src/AppContext.js":"5"},{"size":446,"mtime":1690531336299,"results":"6","hashOfConfig":"7"},{"size":4438,"mtime":1690775819582,"results":"8","hashOfConfig":"7"},{"size":518,"mtime":1690533476393,"results":"9","hashOfConfig":"7"},{"size":1045,"mtime":1690530202040,"results":"10","hashOfConfig":"7"},{"size":685,"mtime":1690530251389,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","suppressedMessages":"14","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"15"},"lv9nk8",{"filePath":"16","messages":"17","suppressedMessages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19"},{"filePath":"20","messages":"21","suppressedMessages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"15"},{"filePath":"23","messages":"24","suppressedMessages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26","usedDeprecatedRules":"15"},{"filePath":"27","messages":"28","suppressedMessages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"15"},"/home/semp/programs/react/react-projects/form/src/index.js",[],[],[],"/home/semp/programs/react/react-projects/form/src/valid.js",["30","31","32","33","34","35"],[],"import React, { useState, useEffect, useContext } from 'react';\nimport { Navigate, useNavigate } from 'react-router-dom';\nimport './valid.module.css';\nimport { AppContext } from './AppContext';\nconst initialFormState = {\n  name: '',\n  age: '',\n  gender: '',\n  mobile: '',\n  dob: '',\n  address: '',\n};\n\n\nconst VotingListForm = () => {\n\n  const [ageValid , setAgeValid] = useState(false);\n  const [age, setAge] = useState(0);\n\n  const [gender , setGender] = useState(\"\");\n  const [genderValid , setGenderValid] = useState(false);\n\n  const [name , setName] = useState(\"\");\n\n  const [mobileNum , setMobileNum] = useState('');\n  const [mobileNumValid, setMobileNumValid] = useState(false);\n\n  const [dob , setDob] = useState('');\n  const [addr, setAddr] = useState('');\n\n  const [submitDisplay, setSubmitDisplay] = useState(false);\n  const [statusDisplay, setStatusDisplay] = useState(\"\");\n\n  const navigate = useNavigate();\n\n  const { formData, setFormData } = useContext(AppContext);\n\n  useEffect(() => {\n    const isFormValid =\n      name &&\n      ageValid &&\n      mobileNumValid &&\n      genderValid &&\n      dob &&\n      addr;\n\n    setSubmitDisplay(isFormValid);\n  }, []);\n\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    console.log(\"submitted?\");\n    setFormData({ name:name, age:age, mobileNum:mobileNum, gender:gender, dob:dob, addr:addr})\n    navigate('/status', { state: { statusParam: {name : name, age: age, mobileNum: mobileNum, gender:gender, dob:dob, addr:addr} } });\n  };\n\nconst genderBoxHere = <label>\nGender:\n<select name=\"gender\" value={gender} onChange={(e) => {\n    setGender(e.target.value);\n    if(e.target.value === \"\") {\n        setGenderValid(false);\n        setStatusDisplay(\"Invalid gender\");\n    }  else {\n        setGenderValid(true);\n        setStatusDisplay(\"Enter mobile number\");\n\n    }\n}} required>\n  <option value=\"\">Select Gender</option>\n  <option value=\"male\">Male</option>\n  <option value=\"female\">Female</option>\n</select>\n<br/>\n</label>\nconst mobileBoxHere = <label>\nMobile:\n<input\n  type=\"tel\"\n  name=\"mobile\"\n  value={mobileNum}\n  onChange={(e) => {\n    const value = e.target.value;\n    if(value !== NaN) {\n        setMobileNum(value);\n        if(value && value.length >= 10) {\n            setMobileNumValid(true);\n            setStatusDisplay(\"Enter DOB\");                \n        } else {\n            setMobileNumValid(false);\n            setStatusDisplay(\"Invalid mobile number\");\n        }\n    }\n  }}\n  required\n  pattern=\"[0-9]{10}\"\n  title=\"Enter valid 10-digit mobile number, damnit\"\n/>\n</label>\n\nconst dobBoxHere = <label>\nDOB:\n<input\n  type=\"date\"\n  name=\"dob\"\n  value={dob}\n  onChange={(e) => {\n    const value = e.target.value;\n    if(value) {\n        setDob(value);\n        setStatusDisplay(\"Enter Address\");\n    }\n  }}\n  required\n/>\n</label>\n\nconst addrBox = <label>\nAddress:\n<textarea\n  name=\"address\"\n  value={addr}\n  onChange={(e) => {\n    const value = e.target.value;\n    if(value !== \"\") {\n        setSubmitDisplay(true);\n        setAddr(value);\n    }\n  }}\n  required\n/>\n</label>\n\n  return (\n    <div className='centered-div'>\n    <form onSubmit={handleSubmit}>\n      <label>\n        Name:\n        <input\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          onChange={(e) => {\n            setName(e.target.value);\n          }}\n          required\n        />\n      </label>\n      <br />\n      \n      <label>\n        Age:\n        <input\n          type=\"number\"\n          name=\"age\"\n          value={age}\n          onChange={(e) => {\n            const value = e.target.valueAsNumber;\n            if(value === NaN) return;\n            console.log(\"Age : \" + value) \n            setAge(value);\n            if(value >= 18) {\n                setStatusDisplay(\"Enter gender\");\n                setAgeValid(true);\n            }  else {\n                setStatusDisplay(\"Must be >= 18 age\");\n                setAgeValid(false);\n            }\n          }}\n          required\n          min=\"18\"\n          max=\"100\"\n        />\n      </label>\n      <br />\n    {ageValid && (genderBoxHere)}\n    {genderValid && (mobileBoxHere)}\n      <br />\n      {mobileNumValid && (dobBoxHere)}\n      <br />\n      {dob!==\"\" && (addrBox)}\n      <br />\n    {submitDisplay === true ? \n    ( <input type=\"submit\" value=\"Submit\" disabled={!submitDisplay} />)\n    :\n    ( <h1>{statusDisplay}</h1>)\n    }\n  \n    </form>\n    </div>\n  );\n};\n\nexport default VotingListForm;\n","/home/semp/programs/react/react-projects/form/src/App.js",[],[],"/home/semp/programs/react/react-projects/form/src/StatusPage.js",["36"],[],"import React ,{ useContext } from 'react';\n// import './StatusPage.module.css'; // This doesn't work; go with index.css\nimport { useLocation } from 'react-router-dom';\nimport { AppContext } from './AppContext';\n\nconst StatusPage = () => {\n  const { formData } = useContext(AppContext);\n  const { name, age, mobileNum, gender, dob, addr } = formData;\n  return (\n    <div className=\"container\">\n      <h1 className=\"title\">Status Page</h1>\n      <p>Thank you for submitting your vote!</p>\n\n      <h2>Submitted Details:</h2>\n      <p className=\"submitted-details\">Name: {name}</p>\n      <p className=\"submitted-details\">Age: {age}</p>\n      <p className=\"submitted-details\">Mobile Number: {mobileNum}</p>\n      <p className=\"submitted-details\">Gender: {gender}</p>\n      <p className=\"submitted-details\">Date of Birth (DOB): {dob}</p>\n      <p className=\"submitted-details\">Address: {addr}</p>\n\n      <button className=\"status-button\" onClick={() => {\n        alert(\"Done\");\n      }}>Success</button>\n    </div>\n  );\n};\n\nexport default StatusPage;\n","/home/semp/programs/react/react-projects/form/src/AppContext.js",[],[],{"ruleId":"37","severity":1,"message":"38","line":2,"column":10,"nodeType":"39","messageId":"40","endLine":2,"endColumn":18},{"ruleId":"37","severity":1,"message":"41","line":5,"column":7,"nodeType":"39","messageId":"40","endLine":5,"endColumn":23},{"ruleId":"37","severity":1,"message":"42","line":36,"column":11,"nodeType":"39","messageId":"40","endLine":36,"endColumn":19},{"ruleId":"43","severity":1,"message":"44","line":48,"column":6,"nodeType":"45","endLine":48,"endColumn":8,"suggestions":"46"},{"ruleId":"47","severity":1,"message":"48","line":85,"column":8,"nodeType":"49","messageId":"50","endLine":85,"endColumn":21},{"ruleId":"47","severity":1,"message":"48","line":160,"column":16,"nodeType":"49","messageId":"50","endLine":160,"endColumn":29},{"ruleId":"37","severity":1,"message":"51","line":3,"column":10,"nodeType":"39","messageId":"40","endLine":3,"endColumn":21},"no-unused-vars","'Navigate' is defined but never used.","Identifier","unusedVar","'initialFormState' is assigned a value but never used.","'formData' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'addr', 'ageValid', 'dob', 'genderValid', 'mobileNumValid', and 'name'. Either include them or remove the dependency array.","ArrayExpression",["52"],"use-isnan","Use the isNaN function to compare with NaN.","BinaryExpression","comparisonWithNaN","'useLocation' is defined but never used.",{"desc":"53","fix":"54"},"Update the dependencies array to be: [addr, ageValid, dob, genderValid, mobileNumValid, name]",{"range":"55","text":"56"},[1169,1171],"[addr, ageValid, dob, genderValid, mobileNumValid, name]"]